#!/usr/bin/python

import os, sys, hashlib, shutil

def sha256(data):
    fileHash = hashlib.sha256(data).hexdigest()
    return fileHash

def searchAndCollect(src, dest):
    print "Searching %s for .exe's, saving to %s" % (src, dest)
    for dirpath, dirnames, filenames in os.walk(src):
	print len(filenames)
    	if src in dirnames:
    	    print "Skipping target directory."
    	    continue
        try:
	    for i in range(0, len(filenames)):
		    fileName = filenames[i]
		    data = open(os.path.join(dirpath, fileName), 'rb').read()
		    if data[0:2] == 'MZ' or data[0:2] == 'ZM':
			datahash = sha256(data)
			try:
			    if not os.path.exists(os.path.join(dest, datahash)):
				shutil.copy( os.path.join(dirpath, fileName), os.path.join(dest, datahash) )
			except Exception as e:
			    print "Error copying %s: %s" % (fileName, str(e))
	except Exception as e:
	    print "Error reading %s: %s" % (fileName, str(e))

if __name__ == '__main__':
    if len(sys.argv) != 3:
        print "Usage: %s <SRC_DIR> <DEST_DIR>" % sys.argv[0]
        print "SearchAndCollect, Python edition, 1.2"
        print "Collects and Stores Windows executables in the destination directory by SHA-256 hash."
        sys.exit(1)
    searchAndCollect(sys.argv[1], sys.argv[2])

